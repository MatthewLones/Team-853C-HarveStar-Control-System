{"ast":null,"code":"var _jsxFileName = \"/Users/matthewlones/Documents/flask-react-app/frontend-final/src/components/ReplayMode.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport StatusCard from './StatusCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst replayOptions = [{\n  id: 0,\n  name: 'Do a Circle'\n}, {\n  id: 1,\n  name: 'Harvest the Plant'\n}, {\n  id: 2,\n  name: 'Wave Hello'\n}];\nexport default function ReplayMode() {\n  _s();\n  const [selectedId, setSelectedId] = useState(null);\n  const [lockedIn, setLockedIn] = useState(false);\n  const [status, setStatus] = useState('Idle');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleStartReplay = () => {\n    if (selectedId === null) return;\n    setLockedIn(true);\n    setLoading(true);\n    setStatus('‚è≥ Starting replay sequence...');\n    setError(null);\n    fetch('/api/start-replay', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        replayIndex: selectedId\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        const eventSource = new EventSource('/api/replay-status');\n        eventSource.onmessage = event => {\n          const update = JSON.parse(event.data);\n          if (update.type === 'step') {\n            setStatus(`üìç Moving to: (${update.coords.join(', ')})`);\n          } else if (update.type === 'done') {\n            setStatus('‚úÖ Replay complete.');\n            setLoading(false);\n            setLockedIn(false);\n            eventSource.close();\n          }\n        };\n      } else {\n        setStatus('‚ùå Error starting replay.');\n        setError(data.error || 'Unknown error.');\n        setLoading(false);\n        setLockedIn(false);\n      }\n    }).catch(err => {\n      setStatus('‚ùå Network or server error.');\n      setError(err.message);\n      setLoading(false);\n      setLockedIn(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto bg-white dark:bg-gray-900 shadow-lg rounded-xl p-6 space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold\",\n      children: \"Replay Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatusCard, {\n      status: status,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-3\",\n      children: replayOptions.map(opt => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => !lockedIn && setSelectedId(opt.id),\n        className: `w-full text-left px-4 py-3 rounded border transition ${selectedId === opt.id ? 'bg-blue-600 text-white' : 'bg-blue-100 dark:bg-gray-800 text-black dark:text-white'} ${lockedIn ? 'opacity-50 cursor-not-allowed' : 'hover:bg-blue-200 dark:hover:bg-gray-700'}`,\n        disabled: lockedIn,\n        children: opt.name\n      }, opt.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-right\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartReplay,\n        disabled: lockedIn || selectedId === null,\n        className: \"mt-4 px-5 py-2 bg-green-600 text-white rounded shadow hover:bg-green-700 disabled:opacity-50\",\n        children: \"Start Replay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(ReplayMode, \"x9ke3avBvKcPzqQ19QZ57ZOtFCA=\");\n_c = ReplayMode;\nvar _c;\n$RefreshReg$(_c, \"ReplayMode\");","map":{"version":3,"names":["React","useState","StatusCard","jsxDEV","_jsxDEV","replayOptions","id","name","ReplayMode","_s","selectedId","setSelectedId","lockedIn","setLockedIn","status","setStatus","loading","setLoading","error","setError","handleStartReplay","fetch","method","headers","body","JSON","stringify","replayIndex","then","res","json","data","success","eventSource","EventSource","onmessage","event","update","parse","type","coords","join","close","catch","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","opt","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/matthewlones/Documents/flask-react-app/frontend-final/src/components/ReplayMode.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport StatusCard from './StatusCard';\n\nconst replayOptions = [\n  { id: 0, name: 'Do a Circle' },\n  { id: 1, name: 'Harvest the Plant' },\n  { id: 2, name: 'Wave Hello' },\n];\n\nexport default function ReplayMode() {\n  const [selectedId, setSelectedId] = useState(null);\n  const [lockedIn, setLockedIn] = useState(false);\n  const [status, setStatus] = useState('Idle');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleStartReplay = () => {\n    if (selectedId === null) return;\n    setLockedIn(true);\n    setLoading(true);\n    setStatus('‚è≥ Starting replay sequence...');\n    setError(null);\n\n    fetch('/api/start-replay', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ replayIndex: selectedId })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          const eventSource = new EventSource('/api/replay-status');\n          eventSource.onmessage = (event) => {\n            const update = JSON.parse(event.data);\n            if (update.type === 'step') {\n              setStatus(`üìç Moving to: (${update.coords.join(', ')})`);\n            } else if (update.type === 'done') {\n              setStatus('‚úÖ Replay complete.');\n              setLoading(false);\n              setLockedIn(false);\n              eventSource.close();\n            }\n          };\n        } else {\n          setStatus('‚ùå Error starting replay.');\n          setError(data.error || 'Unknown error.');\n          setLoading(false);\n          setLockedIn(false);\n        }\n      })\n      .catch(err => {\n        setStatus('‚ùå Network or server error.');\n        setError(err.message);\n        setLoading(false);\n        setLockedIn(false);\n      });\n  };\n\n  return (\n    <div className=\"max-w-xl mx-auto bg-white dark:bg-gray-900 shadow-lg rounded-xl p-6 space-y-6\">\n      <h2 className=\"text-xl font-semibold\">Replay Mode</h2>\n\n      <StatusCard status={status} error={error} />\n\n      <div className=\"space-y-3\">\n        {replayOptions.map(opt => (\n          <button\n            key={opt.id}\n            onClick={() => !lockedIn && setSelectedId(opt.id)}\n            className={`w-full text-left px-4 py-3 rounded border transition ${\n              selectedId === opt.id ? 'bg-blue-600 text-white' : 'bg-blue-100 dark:bg-gray-800 text-black dark:text-white'\n            } ${lockedIn ? 'opacity-50 cursor-not-allowed' : 'hover:bg-blue-200 dark:hover:bg-gray-700'}`}\n            disabled={lockedIn}\n          >\n            {opt.name}\n          </button>\n        ))}\n      </div>\n\n      <div className=\"text-right\">\n        <button\n          onClick={handleStartReplay}\n          disabled={lockedIn || selectedId === null}\n          className=\"mt-4 px-5 py-2 bg-green-600 text-white rounded shadow hover:bg-green-700 disabled:opacity-50\"\n        >\n          Start Replay\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}