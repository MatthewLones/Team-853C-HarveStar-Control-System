{"ast":null,"code":"var _jsxFileName = \"/Users/matthewlones/Documents/flask-react-app/frontend-final/src/components/ReplayMode.jsx\",\n  _s = $RefreshSig$();\n// components/ReplayMode.jsx\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst REPLAY_OPTIONS = [{\n  id: 0,\n  name: 'Harvest the Plant'\n}, {\n  id: 1,\n  name: 'Draw a Circle'\n}, {\n  id: 2,\n  name: 'Wave Hello'\n}];\nexport default function ReplayMode() {\n  _s();\n  const [selectedId, setSelectedId] = useState(null);\n  const [status, setStatus] = useState('Idle');\n  const [messages, setMessages] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const startReplay = () => {\n    if (selectedId === null) return;\n    setStatus('Sending replay request...');\n    setMessages([]);\n    setIsRunning(true);\n    fetch('/api/start-replay', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        index: selectedId\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        setStatus('Replay started!');\n      } else {\n        setStatus('❌ Failed to start replay.');\n        setIsRunning(false);\n      }\n    }).catch(err => {\n      setStatus('❌ Error contacting server.');\n      setIsRunning(false);\n    });\n  };\n\n  // Live polling loop while replay is running\n  useEffect(() => {\n    if (!isRunning) return;\n    console.log(\"[React] Triggering replay index: 0 \"); // ✅ ADD THIS\n    const interval = setInterval(() => {\n      fetch('/api/replay-status').then(res => res.json()).then(data => {\n        if (data.messages) {\n          setMessages(prev => [...prev, ...data.messages]);\n        }\n        if (data.done) {\n          setStatus('✅ Replay complete.');\n          setIsRunning(false);\n          clearInterval(interval);\n        }\n      }).catch(err => {\n        setStatus('❌ Error polling status');\n        setIsRunning(false);\n        clearInterval(interval);\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [isRunning]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto bg-blue-900/40 border border-blue-300/20 shadow-lg rounded-xl p-6 space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-2\",\n      children: \"Replay Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2\",\n      children: REPLAY_OPTIONS.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedId(option.id),\n        className: `block w-full text-left px-4 py-2 rounded-lg transition shadow-sm border text-sm\n              ${selectedId === option.id ? 'bg-blue-600 text-white' : 'bg-blue-200/10 hover:bg-blue-300/10 border-blue-400/10'}`,\n        disabled: isRunning,\n        children: option.name\n      }, option.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startReplay,\n      disabled: selectedId === null || isRunning,\n      className: \"w-full mt-4 bg-green-600 hover:bg-green-700 text-white font-semibold py-2 px-4 rounded disabled:opacity-50\",\n      children: isRunning ? 'Running...' : 'Start Replay'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 p-4 bg-black/40 rounded text-sm max-h-64 overflow-y-auto border border-blue-400/20\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-bold text-blue-100 mb-2\",\n        children: \"Replay Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-1 text-blue-200\",\n        children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: JSON.stringify(msg)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2 italic text-xs text-blue-300\",\n        children: [\"Status: \", status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(ReplayMode, \"+5npPOA2bLy20n3ykH5WlKsZvoE=\");\n_c = ReplayMode;\nvar _c;\n$RefreshReg$(_c, \"ReplayMode\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","REPLAY_OPTIONS","id","name","ReplayMode","_s","selectedId","setSelectedId","status","setStatus","messages","setMessages","isRunning","setIsRunning","startReplay","fetch","method","headers","body","JSON","stringify","index","then","res","json","data","success","catch","err","console","log","interval","setInterval","prev","done","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","onClick","disabled","msg","i","_c","$RefreshReg$"],"sources":["/Users/matthewlones/Documents/flask-react-app/frontend-final/src/components/ReplayMode.jsx"],"sourcesContent":["// components/ReplayMode.jsx\nimport React, { useState, useEffect } from 'react';\n\nconst REPLAY_OPTIONS = [\n  { id: 0, name: 'Harvest the Plant' },\n  { id: 1, name: 'Draw a Circle' },\n  { id: 2, name: 'Wave Hello' },\n];\n\nexport default function ReplayMode() {\n  const [selectedId, setSelectedId] = useState(null);\n  const [status, setStatus] = useState('Idle');\n  const [messages, setMessages] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n\n  const startReplay = () => {\n    if (selectedId === null) return;\n\n    setStatus('Sending replay request...');\n    setMessages([]);\n    setIsRunning(true);\n\n    fetch('/api/start-replay', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ index: selectedId })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          setStatus('Replay started!');\n        } else {\n          setStatus('❌ Failed to start replay.');\n          setIsRunning(false);\n        }\n      })\n      .catch(err => {\n        setStatus('❌ Error contacting server.');\n        setIsRunning(false);\n      });\n  };\n\n  // Live polling loop while replay is running\n  useEffect(() => {\n    if (!isRunning) return;\n\n    console.log(\"[React] Triggering replay index: 0 \"); // ✅ ADD THIS\n    const interval = setInterval(() => {\n      fetch('/api/replay-status')\n        .then(res => res.json())\n        .then(data => {\n          if (data.messages) {\n            setMessages(prev => [...prev, ...data.messages]);\n          }\n          if (data.done) {\n            setStatus('✅ Replay complete.');\n            setIsRunning(false);\n            clearInterval(interval);\n          }\n        })\n        .catch(err => {\n          setStatus('❌ Error polling status');\n          setIsRunning(false);\n          clearInterval(interval);\n        });\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [isRunning]);\n\n  return (\n    <div className=\"max-w-xl mx-auto bg-blue-900/40 border border-blue-300/20 shadow-lg rounded-xl p-6 space-y-6\">\n      <h2 className=\"text-xl font-bold mb-2\">Replay Mode</h2>\n\n      <div className=\"space-y-2\">\n        {REPLAY_OPTIONS.map(option => (\n          <button\n            key={option.id}\n            onClick={() => setSelectedId(option.id)}\n            className={`block w-full text-left px-4 py-2 rounded-lg transition shadow-sm border text-sm\n              ${selectedId === option.id ? 'bg-blue-600 text-white' : 'bg-blue-200/10 hover:bg-blue-300/10 border-blue-400/10'}`}\n            disabled={isRunning}\n          >\n            {option.name}\n          </button>\n        ))}\n      </div>\n\n      <button\n        onClick={startReplay}\n        disabled={selectedId === null || isRunning}\n        className=\"w-full mt-4 bg-green-600 hover:bg-green-700 text-white font-semibold py-2 px-4 rounded disabled:opacity-50\"\n      >\n        {isRunning ? 'Running...' : 'Start Replay'}\n      </button>\n\n      <div className=\"mt-6 p-4 bg-black/40 rounded text-sm max-h-64 overflow-y-auto border border-blue-400/20\">\n        <p className=\"font-bold text-blue-100 mb-2\">Replay Status:</p>\n        <ul className=\"space-y-1 text-blue-200\">\n          {messages.map((msg, i) => (\n            <li key={i}>{JSON.stringify(msg)}</li>\n          ))}\n        </ul>\n        <p className=\"mt-2 italic text-xs text-blue-300\">Status: {status}</p>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}