{"ast":null,"code":"var _jsxFileName = \"/Users/matthewlones/Documents/flask-react-app/frontend-final/src/components/ControlPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CoordinateInput from './CoordinateInput';\nimport StatusCard from './StatusCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ControlPanel() {\n  _s();\n  const [coords, setCoords] = useState({\n    x: 0,\n    y: 0,\n    z: 0,\n    effector: 45\n  });\n  const [status, setStatus] = useState('Ready');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // 🔧 Coordinate field handler\n  const handleCoordChange = (name, value) => {\n    setCoords(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // 🚀 Send to Flask backend\n  const sendCoords = () => {\n    setLoading(true);\n    setStatus(`Sending coordinates to robot...`);\n    setError(null);\n    if (coords.effector < 0 || coords.effector > 90) {\n      setStatus(\"⚠️ Invalid effector angle (must be 0–90)\");\n      setError(\"Effector angle must be between 0 and 90.\");\n      setLoading(false);\n      return;\n    }\n    fetch('/api/move-arm', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(coords)\n    }).then(res => res.json()).then(data => {\n      if (data.type === \"update\") {\n        setStatus(`✅ Arm moved to (${data.data.x}, ${data.data.y}, ${data.data.z})`);\n      } else if (data.type === \"bounds\") {\n        var _data$data;\n        setStatus(\"⚠️ OUT OF BOUNDS!!!\");\n        setError(((_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.message) || \"Out of bounds.\");\n      } else {\n        setStatus(\"⚠️ Unknown response.\");\n      }\n    }).catch(err => {\n      setStatus('❌ Network or server error.');\n      setError(err.message);\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto bg-white dark:bg-gray-900 shadow-lg rounded-xl p-6 space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold\",\n      children: \"Robot Arm Coordinate Control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatusCard, {\n      status: status,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(CoordinateInput, {\n        label: \"X\",\n        name: \"x\",\n        value: coords.x,\n        onChange: handleCoordChange,\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CoordinateInput, {\n        label: \"Y\",\n        name: \"y\",\n        value: coords.y,\n        onChange: handleCoordChange,\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CoordinateInput, {\n        label: \"Z\",\n        name: \"z\",\n        value: coords.z,\n        onChange: handleCoordChange,\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CoordinateInput, {\n        label: \"End Effector (0\\u201390)\",\n        name: \"effector\",\n        value: coords.effector,\n        onChange: handleCoordChange,\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendCoords,\n      disabled: loading,\n      className: \"w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded disabled:opacity-50\",\n      children: loading ? 'Sending...' : 'Send Coordinates'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(ControlPanel, \"YnaTPb9MSS0HuP3oA2qxBq7/FLI=\");\n_c = ControlPanel;\nvar _c;\n$RefreshReg$(_c, \"ControlPanel\");","map":{"version":3,"names":["React","useState","CoordinateInput","StatusCard","jsxDEV","_jsxDEV","ControlPanel","_s","coords","setCoords","x","y","z","effector","status","setStatus","loading","setLoading","error","setError","handleCoordChange","name","value","prev","sendCoords","fetch","method","headers","body","JSON","stringify","then","res","json","data","type","_data$data","message","catch","err","finally","className","children","fileName","_jsxFileName","lineNumber","columnNumber","label","onChange","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/matthewlones/Documents/flask-react-app/frontend-final/src/components/ControlPanel.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport CoordinateInput from './CoordinateInput';\nimport StatusCard from './StatusCard';\n\nexport default function ControlPanel() {\n  const [coords, setCoords] = useState({ x: 0, y: 0, z: 0, effector: 45 });\n  const [status, setStatus] = useState('Ready');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n\n  // 🔧 Coordinate field handler\n  const handleCoordChange = (name, value) => {\n    setCoords(prev => ({ ...prev, [name]: value }));\n  };\n\n  // 🚀 Send to Flask backend\n  const sendCoords = () => {\n    setLoading(true);\n    setStatus(`Sending coordinates to robot...`);\n    setError(null);\n\n    if (coords.effector < 0 || coords.effector > 90) {\n      setStatus(\"⚠️ Invalid effector angle (must be 0–90)\");\n      setError(\"Effector angle must be between 0 and 90.\");\n      setLoading(false);\n      return;\n    }\n\n    fetch('/api/move-arm', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(coords)\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.type === \"update\") {\n          setStatus(`✅ Arm moved to (${data.data.x}, ${data.data.y}, ${data.data.z})`);\n        } else if (data.type === \"bounds\") {\n          setStatus(\"⚠️ OUT OF BOUNDS!!!\");\n          setError(data.data?.message || \"Out of bounds.\");\n        } else {\n          setStatus(\"⚠️ Unknown response.\");\n        }\n      })\n      .catch(err => {\n        setStatus('❌ Network or server error.');\n        setError(err.message);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"max-w-xl mx-auto bg-white dark:bg-gray-900 shadow-lg rounded-xl p-6 space-y-6\">\n      <h1 className=\"text-2xl font-bold\">Robot Arm Coordinate Control</h1>\n\n      <StatusCard status={status} error={error} />\n\n      <div className=\"grid grid-cols-2 gap-4\">\n        <CoordinateInput label=\"X\" name=\"x\" value={coords.x} onChange={handleCoordChange} disabled={loading} />\n        <CoordinateInput label=\"Y\" name=\"y\" value={coords.y} onChange={handleCoordChange} disabled={loading} />\n        <CoordinateInput label=\"Z\" name=\"z\" value={coords.z} onChange={handleCoordChange} disabled={loading} />\n        <CoordinateInput label=\"End Effector (0–90)\" name=\"effector\" value={coords.effector} onChange={handleCoordChange} disabled={loading} />\n      </div>\n\n      <button\n        onClick={sendCoords}\n        disabled={loading}\n        className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded disabled:opacity-50\"\n      >\n        {loading ? 'Sending...' : 'Send Coordinates'}\n      </button>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}